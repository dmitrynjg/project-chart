{"version":3,"sources":["store.js","components/Chart.jsx","api/index.js","date.js","components/ChartTools.jsx","App.js","index.js"],"names":["state","store","typeChart","dataCurrency","dataCurrencyCurrent","currency","title","unique_id","dateFrom","Date","dateTo","CustomTooltip","_ref","payload","label","active","react_default","a","createElement","className","value","Charts","data","JSON","parse","stringify","es6","width","window","innerWidth","height","margin","top","right","left","bottom","strokeDasharray","dataKey","content","Chart_CustomTooltip","type","stroke","activeDot","r","fill","React","Component","view","xml2js","require","loadDataRate","Object","asyncToGenerator","regenerator_default","mark","_callee","url","res","text","parser","response","i","wrap","_context","prev","next","fetch","sent","Parser","explicitArray","parseString","err","result","ValCurs","Record","length","Value","Number","replace","abrupt","stop","_x","apply","this","arguments","getISODate","date","valueOf","getTimezoneOffset","toISOString","slice","createTimeInterval","day","getFullYear","from","to","getDataInterval","fromDate","toDate","returnData","dateInfo","$","split","push","ChartTools","_this","classCallCheck","_super","call","dateToReq","toLocaleDateString","concat","then","_this2","dayFromIco","dayToIco","presentDayIco","id","max","defaultValue","onChange","e","target","loadChart","loadData","min","onClick","interval","maxDay","Math","round","getTime","App","components_ChartTools","Chart","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.3452eacd.chunk.js","sourcesContent":["import { store } from '@risingstack/react-easy-state';\n\nconst state = store({\n  typeChart: 'Area',\n  dataCurrency: [],\n  dataCurrencyCurrent:[],\n  currency: {\n    title: 'Dollar',\n    unique_id:'R01235'\n  },\n  dateFrom: new Date(new Date() - 180  * 24 * 3600 * 1000),\n  dateTo: new Date()\n});\n\n\n\nexport default state;\n","import React from \"react\";\nimport { view } from \"@risingstack/react-easy-state\";\nimport state from '../store';\n\nimport {\n  LineChart, Line,AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\n} from 'recharts';\nconst CustomTooltip = ({ payload, label, active }) => {\n  if (active) {\n    return (\n      <div className=\"tooltip\">\n        <div className=\"date\">Курс на {label}</div>\n        <div className=\"price-value\">Цена: {payload[0].value} &#8381;</div>\n      </div>\n    );\n  }\n\n  return null;\n}\nclass Charts extends React.Component {\n\n  render() {\n    \n    const data = JSON.parse(JSON.stringify(state.dataCurrencyCurrent));\n    return (\n     \n      <div className='rate-currancy'>\n        \n    {state.typeChart === 'Line' &&\n      <ResponsiveContainer>\n      <LineChart\n      width={window.innerWidth}\n      height={400}\n      data={data}\n      margin={{\n        top: 5, right: 30, left: 20, bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"$.Date\" />\n      <YAxis />\n      <Tooltip content={<CustomTooltip/>}/>\n      <Legend />\n      <Line type=\"monotone\" dataKey=\"Value\" stroke=\"#8884d8\" activeDot={{ r: 6 }} />\n    </LineChart>\n    </ResponsiveContainer>\n  }\n   {state.typeChart === 'Area' &&\n     <ResponsiveContainer >\n      <AreaChart\n\n      data={data}\n      margin={{\n        top: 10, right: 30, left: 0, bottom: 0,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"$.Date\" />\n      <YAxis />\n      <Tooltip content={<CustomTooltip/>}/>\n      <Area type=\"monotone\" dataKey=\"Value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n    </AreaChart>\n    </ResponsiveContainer>\n  }\n  \n    </div>\n   \n    );\n}\n}\nexport default view(Charts);\n","const xml2js = require('xml2js');\r\n\r\nexport const loadDataRate = async function (url) {\r\n   let res = await fetch(url);\r\n   let text = await res.text();\r\n\r\n   const parser = new xml2js.Parser({ explicitArray: false });\r\n   let response = [];\r\n   parser.parseString(text, (err, result) => {\r\n      response = result;\r\n   });\r\n   if (response.ValCurs !== 'Error in parameters') {\r\n      for (let i = 0; i < response.ValCurs.Record.length; i++) {\r\n         response.ValCurs.Record[i].Value = Number(response.ValCurs.Record[i].Value.replace(',', '.'));\r\n      }\r\n   } \r\n   \r\n    return response.ValCurs;\r\n};","export const getISODate = function (date) {\r\n    let value = date.valueOf() + new Date().getTimezoneOffset() * -60000;\r\n    return new Date(value).toISOString().slice(0, 10);\r\n}\r\n\r\nexport const createTimeInterval=  function(day) {\r\n  if(new Date().getFullYear() % 4 === 0){\r\n    day++;\r\n  }\r\n  return{\r\n       from: new Date(new Date() - day * 24 * 3600 * 1000 ),\r\n       to: new Date()\r\n  }\r\n}\r\n\r\nexport const getDataInterval = function(fromDate,toDate,data) {\r\n  if(typeof( fromDate && toDate && data) === 'object'){\r\n    let returnData = [];\r\n    for(let i = 0;i < data.length; i++){\r\n      let dateInfo = data[i].$.Date.split('.');\r\n    \r\n      if((fromDate <= new Date(dateInfo[2],dateInfo[1],dateInfo[0])) && (new Date(dateInfo[2],dateInfo[1],dateInfo[0]) <= toDate)){\r\n         returnData.push(data[i]);\r\n      }\r\n    }\r\n    return returnData;\r\n  }\r\n}","import React from 'react';\r\nimport { view } from '@risingstack/react-easy-state';\r\nimport state from '../store';\r\nimport { loadDataRate } from '../api/index';\r\nimport { getISODate, getDataInterval, createTimeInterval } from '../date';\r\n\r\n\r\nclass ChartTools extends React.Component {\r\n  constructor(){\r\n    super();\r\n      const dateToReq = new Date().toLocaleDateString().replace(/[.]/g, '/');\r\n      const url = `/scripts/XML_dynamic.asp?date_req1=01/01/1970&date_req2=${dateToReq}&VAL_NM_RQ=${state.currency.unique_id}`;\r\n      loadDataRate(url).then(res => {\r\n        if(typeof res === 'object'){\r\n        state.dataCurrency = res.Record;\r\n        state.dataCurrencyCurrent = getDataInterval(state.dateFrom,state.dateTo,state.dataCurrency);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  loadData() {\r\n    if(state.dateFrom < state.dateTo && state.dateTo <= new Date()){\r\n    state.dataCurrencyCurrent = getDataInterval(state.dateFrom,state.dateTo,state.dataCurrency);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const dayFromIco = getISODate(state.dateFrom);\r\n    const dayToIco = getISODate(state.dateTo);\r\n    const presentDayIco = getISODate(new Date());\r\n\r\n    return (\r\n\r\n      <div className='chart-tools'>\r\n\r\n        <div className='chart-tools-dates'>\r\n          <span>Курс от: </span>\r\n          <input\r\n            type='date'\r\n            id='from'\r\n          \r\n            max={getISODate(new Date() - 1 )}\r\n            defaultValue={dayFromIco}\r\n            onChange={(e) => {\r\n              if (e.target.value !== '') {\r\n                let date = new Date(e.target.value);\r\n                if(date.getFullYear() > 1970 ){\r\n                state.loadChart = true;\r\n                state.dateFrom = new Date(e.target.value);\r\n                this.loadData();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          <span>Курс до: </span>\r\n          <input\r\n            type='date'\r\n            id='to'\r\n            min={getISODate(new Date(new Date(dayFromIco) + 1 * 24 * 3600 * 1000))}\r\n            max={presentDayIco}\r\n            defaultValue={dayToIco}\r\n            onChange={(e) => {\r\n              if (e.target.value !== '') {\r\n                let date = new Date(e.target.value);\r\n                if(date.getFullYear() > 1970 ){\r\n                state.loadChart = true;\r\n                state.dateTo = new Date(e.target.value);\r\n                this.loadData();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"chart-tools-interval\">\r\n          <button onClick={() => {\r\n            let interval = createTimeInterval( 7 );\r\n            state.dateFrom = interval.from;\r\n            state.dateTo = interval.to;\r\n            this.loadData();\r\n          }}>7d</button>\r\n          <button onClick={() => {\r\n            let interval = createTimeInterval( 14 );\r\n            state.dateFrom = interval.from;\r\n            state.dateTo = interval.to;\r\n            this.loadData();\r\n          }}>14d</button>\r\n                   <button onClick={() => {\r\n            let interval = createTimeInterval( 30 );\r\n            state.dateFrom = interval.from;\r\n            state.dateTo = interval.to;\r\n            this.loadData();\r\n          }}>30d</button>\r\n                   <button onClick={() => {\r\n            let interval = createTimeInterval( 60 );\r\n            state.dateFrom = interval.from;\r\n            state.dateTo = interval.to;\r\n            this.loadData();\r\n          }}>60d</button>\r\n                   <button onClick={() => {\r\n            let interval = createTimeInterval( 90 );\r\n            state.dateFrom = interval.from;\r\n            state.dateTo = interval.to;\r\n            this.loadData();\r\n          }}>90d</button>\r\n                   <button onClick={() => {\r\n           let interval = createTimeInterval( 180 );\r\n            state.dateFrom = interval.from;\r\n            state.dateTo = interval.to;\r\n            this.loadData();\r\n          }}>180d</button>\r\n                   <button onClick={() => {\r\n             let interval = createTimeInterval( 365 );\r\n              state.dateFrom = interval.from;\r\n            state.dateTo = interval.to;\r\n              this.loadData();\r\n          }}>1y</button>\r\n          <button onClick={() => {\r\n              let maxDay =  Math.round((new Date().getTime() - new Date('1980-01-01'))/24/3600/1000);\r\n              let interval = createTimeInterval( maxDay );\r\n              state.dateFrom = interval.from;\r\n              state.dateTo = interval.to;\r\n              this.loadData();\r\n          }}>Max</button>\r\n        </div>\r\n        <div>\r\n          <button onClick={(e) => (state.typeChart = 'Line')}>Line</button>\r\n          <button onClick={(e) => (state.typeChart = 'Area')}>Area</button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\nexport default view(ChartTools);\r\n","import React from \"react\";\nimport { view } from \"@risingstack/react-easy-state\";\nimport Charts from \"./components/Chart\";\nimport ChartsTools from \"./components/ChartTools\";\nimport state from \"./store\";\nimport styles from './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"rate-currancy\">\n        <h2>Курс {state.currency.title} c {state.dateFrom.toLocaleDateString()} по {state.dateTo.toLocaleDateString()}</h2>\n        <ChartsTools/>\n        <Charts/>\n      </div>\n    );\n  }\n}\nexport default view(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}