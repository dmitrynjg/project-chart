{"version":3,"sources":["store.js","components/Chart.jsx","api/index.js","components/ChartTools.jsx","App.js","index.js"],"names":["state","store","typeChart","loadChart","dataCurrency","currency","title","unique_id","dateFrom","Date","dateTo","Charts","data","JSON","parse","stringify","react_default","a","createElement","es6","width","window","innerWidth","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","fill","React","Component","view","xml2js","require","loadDataRate","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","url","waitCallback","res","text","response","i","wrap","_context","prev","next","fetch","sent","Parser","explicitArray","parseString","err","result","ValCurs","Record","length","Value","Number","replace","abrupt","stop","_x","_x2","apply","this","arguments","ChartTools","_this","classCallCheck","_super","call","loadData","day","getFullYear","dateFromReq","toLocaleDateString","dateToReq","concat","then","date","value","valueOf","getTimezoneOffset","toISOString","slice","_this2","dayFromIco","getISODate","dayToIco","presentDayIco","id","min","max","defaultValue","onChange","e","target","onClick","setRangeDates","App","components_ChartTools","Chart","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_App"],"mappings":"4PAgBeA,EAdDC,YAAM,CAClBC,UAAW,OACXC,WAAU,EACVC,aAAc,GACdC,SAAU,CACRC,MAAO,SACPC,UAAU,UAEZC,SAAU,IAAIC,KAAK,IAAIA,KAAS,SAChCC,OAAQ,IAAID,eCFRE,yKAIF,IAAIC,EAAOC,KAAKC,MAAMD,KAAKE,UAAUf,EAAMI,eAC3C,OACEY,EAAAC,EAAAC,cAAA,YACmB,IAApBlB,EAAMG,WACNa,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BAGkB,SAApBlB,EAAME,WACLc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACAC,MAAOC,OAAOC,WACdC,OAAQ,IACRX,KAAMA,EACNY,OAAQ,CACNC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGvCZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeU,gBAAgB,QAC/Bb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOW,QAAQ,WACfd,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMY,KAAK,WAAWD,QAAQ,QAAQE,OAAO,UAAUC,UAAW,CAAEC,EAAG,MAGrD,SAApBlC,EAAME,WACJc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACAC,MAAOC,OAAOC,WACdC,OAAQ,IACRX,KAAMA,EACNY,OAAQ,CACNC,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,IAGvCZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeU,gBAAgB,QAC/Bb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOW,QAAQ,WACfd,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMY,KAAK,WAAWD,QAAQ,QAAQE,OAAO,UAAUG,KAAK,qBA1C7CC,IAAMC,WAiDZC,cAAK3B,8BC1Dd4B,EAASC,EAAQ,KAEVC,EAAY,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAA5B,EAAA6B,KAAG,SAAAC,EAAgBC,EAAKC,GAArB,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAA5B,EAAAqC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACG,oBAAjBR,GAA6BA,IADfM,EAAAE,KAAA,EAETC,MAAMV,GAFG,cAErBE,EAFqBK,EAAAI,KAAAJ,EAAAE,KAAA,EAGRP,EAAIC,OAHI,UAGrBA,EAHqBI,EAAAI,KAIV,IAAIpB,EAAOqB,OAAO,CAAEC,eAAe,IAE3CC,YAAYX,EAAM,SAACY,EAAKC,GAC5BZ,EAAWY,IAEW,wBAArBZ,EAASa,QATY,CAAAV,EAAAE,KAAA,SAUtB,IAASJ,EAAI,EAAGA,EAAID,EAASa,QAAQC,OAAOC,OAAQd,IACjDD,EAASa,QAAQC,OAAOb,GAAGe,MAAQC,OAAOjB,EAASa,QAAQC,OAAOb,GAAGe,MAAME,QAAQ,IAAK,MAXrE,OAAAf,EAAAgB,OAAA,SAafnB,EAASa,SAbM,eAAAV,EAAAgB,OAAA,SAefnB,EAASa,SAfM,yBAAAV,EAAAiB,SAAAzB,MAAH,gBAAA0B,EAAAC,GAAA,OAAAhC,EAAAiC,MAAAC,KAAAC,YAAA,GCGnBC,oDACJ,SAAAA,IAAa,IAAAC,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAiC,KAAAE,GACXC,EAAAE,EAAAC,KAAAN,MACiC,IAA9B5E,EAAMI,aAAa+D,QACpBY,EAAKI,WAHIJ,4DAMCK,IACT,IAAI3E,MAAO4E,cAAgB,IAAM,GAClCD,IAEFpF,EAAMQ,SAAW,IAAIC,KAAK,IAAIA,KAAe,GAAN2E,EAAW,KAAO,KACzDpF,EAAMU,OAAS,IAAID,wCAGrB,IAAKT,EAAMQ,UAAYR,EAAMU,SAAW,IAAID,MAAWT,EAAMU,OAASV,EAAMQ,SAAS,CACnF,IAAM8E,EAActF,EAAMQ,SAAS+E,qBAAqBjB,QAAQ,OAAQ,KAClEkB,EAAYxF,EAAMU,OAAO6E,qBAAqBjB,QAAQ,OAAQ,KAC9DtB,EAAG,sCAAAyC,OAAyCH,EAAzC,eAAAG,OAAkED,EAAlE,eAAAC,OAAyFzF,EAAMK,SAASE,WACjHP,EAAMG,WAAY,EAClBsC,EAAaO,GAAK0C,KAAK,SAAAxC,GACH,kBAARA,IACVlD,EAAMI,aAAe8C,EAAIgB,UAG3BlE,EAAMG,WAAY,sCAITwF,GACT,IAAIC,EAAQD,EAAKE,WAA8C,KAAlC,IAAIpF,MAAOqF,oBACxC,OAAO,IAAIrF,KAAKmF,GAAOG,cAAcC,MAAM,EAAG,qCAEvC,IAAAC,EAAArB,KACDsB,EAAatB,KAAKuB,WAAWnG,EAAMQ,UACnC4F,EAAWxB,KAAKuB,WAAWnG,EAAMU,QACjC2F,EAAgBzB,KAAKuB,WAAW,IAAI1F,MAE1C,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,SACEa,KAAK,OACLuE,GAAG,OACHC,IAAI,aACJC,IAAK5B,KAAKuB,WAAW,IAAI1F,KAAS,GAClCgG,aAAcP,EACdQ,SAAU,SAACC,GACc,KAAnBA,EAAEC,OAAOhB,QACA,IAAInF,KAAKkG,EAAEC,OAAOhB,OACrBP,cAAgB,OACxBrF,EAAMQ,SAAW,IAAIC,KAAKkG,EAAEC,OAAOhB,OACnCK,EAAKd,gBAKXnE,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,SACEa,KAAK,OACLuE,GAAG,KACHC,IAAK3B,KAAKuB,WAAW,IAAI1F,KAAK,IAAIA,KAAKyF,GAAc,IACrDM,IAAKH,EACLI,aAAcL,EACdM,SAAU,SAACC,GACc,KAAnBA,EAAEC,OAAOhB,QACA,IAAInF,KAAKkG,EAAEC,OAAOhB,OACrBP,cAAgB,OACxBrF,EAAMU,OAAS,IAAID,KAAKkG,EAAEC,OAAOhB,OACjCK,EAAKd,iBAMbnE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ2F,QAAS,SAACF,GAChBV,EAAKa,cAAe,GACpBb,EAAKd,aAFP,MAIAnE,EAAAC,EAAAC,cAAA,UAAQ2F,QAAS,SAACF,GAChBV,EAAKa,cAAe,IACpBb,EAAKd,aAFP,OAISnE,EAAAC,EAAAC,cAAA,UAAQ2F,QAAS,SAACF,GACzBV,EAAKa,cAAe,IACpBb,EAAKd,aAFE,OAIAnE,EAAAC,EAAAC,cAAA,UAAQ2F,QAAS,SAACF,GACzBV,EAAKa,cAAe,IACpBb,EAAKd,aAFE,OAIAnE,EAAAC,EAAAC,cAAA,UAAQ2F,QAAS,SAACF,GACzBV,EAAKa,cAAe,IACpBb,EAAKd,aAFE,OAIAnE,EAAAC,EAAAC,cAAA,UAAQ2F,QAAS,SAACF,GACzBV,EAAKa,cAAe,KACpBb,EAAKd,aAFE,QAIAnE,EAAAC,EAAAC,cAAA,UAAQ2F,QAAS,SAACF,GACvBV,EAAKa,cAAe,KACpBb,EAAKd,aAFA,OAKXnE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ2F,QAAS,SAACF,GAAD,OAAQ3G,EAAME,UAAY,SAA3C,QACAc,EAAAC,EAAAC,cAAA,UAAQ2F,QAAS,SAACF,GAAD,OAAQ3G,EAAME,UAAY,SAA3C,iBA5GekC,IAAMC,WAmHhBC,cAAKwC,GCjHdiC,yKAEF,OACE/F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCAAUlB,EAAMK,SAASC,MAAzB,MAAmCN,EAAMQ,SAAS+E,qBAAlD,iBAA4EvF,EAAMU,OAAO6E,sBACzFvE,EAAAC,EAAAC,cAAC8F,EAAD,MACAhG,EAAAC,EAAAC,cAAC+F,EAAD,cANU7E,IAAMC,WAWTC,cAAKyE,GCZdG,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPtG,EAAAC,EAAAC,cAACF,EAAAC,EAAMsG,WAAP,KACEvG,EAAAC,EAAAC,cAACsG,EAAD,OAEFN","file":"static/js/main.1b22bfae.chunk.js","sourcesContent":["import { store } from '@risingstack/react-easy-state';\n\nconst state = store({\n  typeChart: 'Area',\n  loadChart:false,\n  dataCurrency: [],\n  currency: {\n    title: 'Dollar',\n    unique_id:'R01235'\n  },\n  dateFrom: new Date(new Date() - 180  * 24 * 3600 * 1000),\n  dateTo: new Date()\n});\n\n\n\nexport default state;\n","import React from \"react\";\nimport { view } from \"@risingstack/react-easy-state\";\nimport state from '../store';\n\n\nimport {\n  LineChart, Line,AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nclass Charts extends React.Component {\n  \n  render() {\n\n    var data = JSON.parse(JSON.stringify(state.dataCurrency));\n    return (\n      <div>\n    {state.loadChart === true &&\n     <div>\n       <span>Loading...</span>\n     </div>\n    }\n    {state.typeChart === 'Line' &&\n      <LineChart\n      width={window.innerWidth}\n      height={300}\n      data={data}\n      margin={{\n        top: 5, right: 30, left: 20, bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"$.Date\" />\n      <YAxis />\n      <Tooltip/>\n      <Legend />\n      <Line type=\"monotone\" dataKey=\"Value\" stroke=\"#8884d8\" activeDot={{ r: 6 }} />\n    </LineChart>\n  }\n   {state.typeChart === 'Area' &&\n      <AreaChart\n      width={window.innerWidth}\n      height={400}\n      data={data}\n      margin={{\n        top: 10, right: 30, left: 0, bottom: 0,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"$.Date\" />\n      <YAxis />\n      <Tooltip />\n      <Area type=\"monotone\" dataKey=\"Value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n    </AreaChart>\n  }\n    </div>\n    );\n}\n}\nexport default view(Charts);\n","const xml2js = require('xml2js');\r\n\r\nexport const loadDataRate = async function (url, waitCallback) {\r\n   if (typeof waitCallback === 'function') waitCallback();\r\n   let res = await fetch(url);\r\n   let text = await res.text();\r\n   const parser = new xml2js.Parser({ explicitArray: false });\r\n   let response;\r\n   parser.parseString(text, (err, result) => {\r\n      response = result;\r\n   });\r\n   if (response.ValCurs !== 'Error in parameters') {\r\n      for (let i = 0; i < response.ValCurs.Record.length; i++) {\r\n         response.ValCurs.Record[i].Value = Number(response.ValCurs.Record[i].Value.replace(',', '.'));\r\n      }\r\n      return response.ValCurs;\r\n   } else {\r\n      return response.ValCurs;\r\n   }\r\n   \r\n};","import React from 'react';\r\nimport { view } from '@risingstack/react-easy-state';\r\nimport state from '../store';\r\nimport { loadDataRate } from '../api/index';\r\n\r\nclass ChartTools extends React.Component {\r\n  constructor(){\r\n    super();\r\n    if(state.dataCurrency.length === 0) { \r\n      this.loadData();\r\n    }\r\n  }\r\n  setRangeDates(day){\r\n    if(new Date().getFullYear() % 4 === 0){\r\n      day++;\r\n    }\r\n    state.dateFrom = new Date(new Date() - day * 24 * 3600 * 1000 );\r\n    state.dateTo = new Date();\r\n  }\r\n  loadData() {\r\n  if(((state.dateFrom && state.dateTo) <= new Date()) && state.dateTo > state.dateFrom){\r\n    const dateFromReq = state.dateFrom.toLocaleDateString().replace(/[.]/g, '/');\r\n    const dateToReq = state.dateTo.toLocaleDateString().replace(/[.]/g, '/');\r\n    const url = `/scripts/XML_dynamic.asp?date_req1=${dateFromReq}&date_req2=${dateToReq}&VAL_NM_RQ=${state.currency.unique_id}`;\r\n    state.loadChart = true;\r\n    loadDataRate(url).then(res => {\r\n      if(typeof res === 'object'){\r\n      state.dataCurrency = res.Record;\r\n      }\r\n    });\r\n    state.loadChart = false;\r\n    }\r\n  }\r\n  \r\n  getISODate(date) {\r\n    let value = date.valueOf() + new Date().getTimezoneOffset() * -60000;\r\n    return new Date(value).toISOString().slice(0, 10);\r\n  }\r\n  render() {\r\n    const dayFromIco = this.getISODate(state.dateFrom);\r\n    const dayToIco = this.getISODate(state.dateTo);\r\n    const presentDayIco = this.getISODate(new Date());\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <span>Курс от: </span>\r\n          <input\r\n            type='date'\r\n            id='from'\r\n            min='1992-07-01'\r\n            max={this.getISODate(new Date() - 1 )}\r\n            defaultValue={dayFromIco}\r\n            onChange={(e) => {\r\n              if (e.target.value !== '') {\r\n                let date = new Date(e.target.value);\r\n                if(date.getFullYear() > 1970 ){\r\n                state.dateFrom = new Date(e.target.value);\r\n                this.loadData();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          <span>Курс до: </span>\r\n          <input\r\n            type='date'\r\n            id='to'\r\n            min={this.getISODate(new Date(new Date(dayFromIco) + 2 ))}\r\n            max={presentDayIco}\r\n            defaultValue={dayToIco}\r\n            onChange={(e) => {\r\n              if (e.target.value !== '') {\r\n                let date = new Date(e.target.value);\r\n                if(date.getFullYear() > 1970 ){\r\n                state.dateTo = new Date(e.target.value);\r\n                this.loadData();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button onClick={(e) => {\r\n            this.setRangeDates( 7 );\r\n            this.loadData();\r\n          }}>7d</button>\r\n          <button onClick={(e) => {\r\n            this.setRangeDates( 14 );\r\n            this.loadData();\r\n          }}>14d</button>\r\n                   <button onClick={(e) => {\r\n            this.setRangeDates( 30 );\r\n            this.loadData();\r\n          }}>30d</button>\r\n                   <button onClick={(e) => {\r\n            this.setRangeDates( 60 );\r\n            this.loadData();\r\n          }}>60d</button>\r\n                   <button onClick={(e) => {\r\n            this.setRangeDates( 90 );\r\n            this.loadData();\r\n          }}>90d</button>\r\n                   <button onClick={(e) => {\r\n            this.setRangeDates( 180 );\r\n            this.loadData();\r\n          }}>180d</button>\r\n                   <button onClick={(e) => {\r\n              this.setRangeDates( 365 );\r\n              this.loadData();\r\n          }}>1y</button>\r\n        </div>\r\n        <div>\r\n          <button onClick={(e) => (state.typeChart = 'Line')}>Line</button>\r\n          <button onClick={(e) => (state.typeChart = 'Area')}>Area</button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\nexport default view(ChartTools);\r\n","import React from \"react\";\nimport { view } from \"@risingstack/react-easy-state\";\nimport Charts from \"./components/Chart\";\nimport ChartsTools from \"./components/ChartTools\";\nimport state from \"./store\";\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>Курс {state.currency.title} c {state.dateFrom.toLocaleDateString()} по {state.dateTo.toLocaleDateString()}</h2>\n        <ChartsTools/>\n        <Charts/>\n      </div>\n    );\n  }\n}\nexport default view(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}